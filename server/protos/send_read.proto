syntax = "proto3";

message SendMessageRequest {
    string sender_id=1;
    string friend_id=2;
    string message_id=3;
    string encoded_message=4;
    uint64 sent_on =5;

}

enum SentMsgState {
    Delivered=0;
    Read=1;
}

message SendAckResponse {
    string message_id=1;
    SentMsgState state=2;
    uint64 ack_on=3;
}

message RegisterEventRequest{
    string name = 1;
    string phone =2;
    string bio=3;
}

message RegisterEventResponse{
    string token=1;
    string pub_key=2;
}

enum UserState {
    Online =0;
    Offline=1;
}

message UserActionEvent{
    string user_id=1;
    UserState status=2;
    uint64 on=3;
}

message RecieveMessage{
    string sender_id=1;
    string friend_id=2;
    string message_id=3;
    string encoded_message=4;
}

service MessagingService {
    rpc RegisterEventHandler(RegisterEventRequest) returns(RegisterEventResponse){}
    rpc SendEventHandler(stream SendMessageRequest) returns(stream SendAckResponse){}
    rpc RecieveMsgEventHandler(UserActionEvent) returns (stream RecieveMessage){}
}